name: Build
run-name: üõ†Ô∏è Build - ${{ github.actor }} üöÄ
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches:
      - main
      - 'release/**'
  workflow_dispatch: # allow manual triggering
  workflow_call: # chainable

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      UI_IMAGE_NAME: country-ui

    steps:
      - name: üßº Cleanup
        run: rm -rf dist/

      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üß± Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: ‚ùáÔ∏è Install Dependencies
        run: npm ci

      - name: üß™ Run Unit Tests
        run: npm run test -- --watch=false --browsers=ChromeHeadlessCI

      - name: üõ†Ô∏è Build Angular App
        run: npm run build

      # build multi-environment (multi-manifest) image: linux/arm64, x86_64/amd64
      - name: üê≥ Build image
        run: |
          docker buildx build \
          --platform linux/arm64 \
          -t "${{ env.UI_IMAGE_NAME }}:latest" \
          --output type=docker .

      - name: üì¶ Package image
        run: docker save "${{ env.UI_IMAGE_NAME }}:latest" | gzip > "${{ env.API_IMAGE_NAME }}.tar.gz"

      - name: ‚¨ÜÔ∏è Store image artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.UI_IMAGE_NAME }}"
          path: ${{ env.API_IMAGE_NAME }}.tar.gz
